#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ngrok URL –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ TiketHet.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python scripts/update_ngrok_url.py https://abc123.ngrok.io
"""

import os
import sys
import re
from pathlib import Path

def update_env_file(new_url: str) -> bool:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç FRONTEND_URL –≤ .env —Ñ–∞–π–ª–µ.
    
    Args:
        new_url: –ù–æ–≤—ã–π ngrok URL
        
    Returns:
        bool: True –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ
    """
    env_path = Path('.env')
    
    if not env_path.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(env_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º FRONTEND_URL
    old_pattern = r'FRONTEND_URL=.*'
    new_line = f'FRONTEND_URL={new_url}'
    
    if re.search(old_pattern, content):
        # –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        new_content = re.sub(old_pattern, new_line, content)
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω FRONTEND_URL –≤ .env")
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        new_content = content + f'\n{new_line}\n'
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω FRONTEND_URL –≤ .env")
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open(env_path, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    return True


def update_websocket_js(new_url: str) -> bool:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç WebSocket URL –≤ JavaScript —Ñ–∞–π–ª–µ.
    
    Args:
        new_url: –ù–æ–≤—ã–π ngrok URL
        
    Returns:
        bool: True –µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ
    """
    js_path = Path('frontend/js/websocket.js')
    
    if not js_path.exists():
        print("‚ùå –§–∞–π–ª frontend/js/websocket.js –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(js_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º HTTP –Ω–∞ WSS –¥–ª—è WebSocket
    ws_url = new_url.replace('https://', 'wss://').replace('http://', 'ws://')
    
    # –ó–∞–º–µ–Ω—è–µ–º baseUrl –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
    old_pattern = r"constructor\(baseUrl = '[^']*'\)"
    new_line = f"constructor(baseUrl = '{ws_url}')"
    
    if re.search(old_pattern, content):
        new_content = re.sub(old_pattern, new_line, content)
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω WebSocket URL –≤ frontend/js/websocket.js")
    else:
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è WebSocket URL")
        return False
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    with open(js_path, 'w', encoding='utf-8') as f:
        f.write(new_content)
    
    return True


def validate_url(url: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å URL.
    
    Args:
        url: URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ URL –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
    """
    if not url.startswith(('http://', 'https://')):
        print("‚ùå URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
        return False
    
    if 'ngrok.io' not in url and 'localhost' not in url:
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ngrok.io –∏–ª–∏ localhost")
    
    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    if len(sys.argv) != 2:
        print("üöÄ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ngrok URL –¥–ª—è TiketHet")
        print("")
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python scripts/update_ngrok_url.py https://abc123.ngrok.io")
        print("")
        print("–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç:")
        print("  ‚Ä¢ –û–±–Ω–æ–≤–ª—è–µ—Ç FRONTEND_URL –≤ .env —Ñ–∞–π–ª–µ")
        print("  ‚Ä¢ –û–±–Ω–æ–≤–ª—è–µ—Ç WebSocket URL –≤ frontend/js/websocket.js")
        print("  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å URL")
        print("")
        print("–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("  ‚Ä¢ WebSocket —Å–µ—Ä–≤–µ—Ä: python websocket_server.py") 
        print("  ‚Ä¢ Telegram –±–æ—Ç: python -m app.telegram.bot")
        sys.exit(1)
    
    new_url = sys.argv[1].rstrip('/')  # –£–±–∏—Ä–∞–µ–º —Å–ª–µ—à –≤ –∫–æ–Ω—Ü–µ
    
    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–∞ URL: {new_url}")
    print("")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
    if not validate_url(new_url):
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if not Path('.env').exists():
        print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è .env)")
        sys.exit(1)
    
    success = True
    
    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
    if not update_env_file(new_url):
        success = False
    
    # –û–±–Ω–æ–≤–ª—è–µ–º WebSocket JavaScript
    if not update_websocket_js(new_url):
        success = False
    
    if success:
        print("")
        print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        print("")
        print("üîÑ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ WebSocket —Å–µ—Ä–≤–µ—Ä:")
        print("   python websocket_server.py")
        print("")
        print("2. –í –Ω–æ–≤–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")
        print("   python -m app.telegram.bot") 
        print("")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É Mini App –≤ Telegram")
        print("   /tickets -> –∫–Ω–æ–ø–∫–∞ '–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç—ã'")
    else:
        print("")
        print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏!")
        sys.exit(1)


if __name__ == "__main__":
    main()